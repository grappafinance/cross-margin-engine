name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '**'

jobs:
  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: recursive
  #     - name: Install Foundry
  #       uses: onbjerg/foundry-toolchain@v1
  #       with:
  #         version: nightly
  #     - name: Run forge fmt
  #       run: forge fmt --check
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      - name: Output solidity version
        run: solc --version
      - name: Run CASH deployment script
        run: FOUNDRY_PROFILE=optimized CrossMarginOwner=0x1804c8AB1F12E6bbf3894d4083f33e07309d1f38 GrappaProxy=0x0000000000000000000000000000000000000001 GrappaOptionToken=0x0000000000000000000000000000000000000002 CrossMarginCashOracle=0x0000000000000000000000000000000000001234 forge script script/deploy-launch-cash.sol

      - name: Run PHYSICAL deployment script
        run: FOUNDRY_PROFILE=optimized CrossMarginOwner=0x1804c8AB1F12E6bbf3894d4083f33e07309d1f38 PomaceProxy=0x0000000000000000000000000000000000000001 PomaceOptionToken=0x0000000000000000000000000000000000000002 CrossMarginPhysicalOracle=0x0000000000000000000000000000000000004321 forge script script/deploy-launch-physical.sol

      - name: Run tests
        run: forge test --match-contract TestStructures_CMPM --match-test testMarginRequirement2 -vvvv

      - name: Run Coverage
        run: forge coverage --report lcov

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: .
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          files: ./lcov.info
          name: grappa-coverage
          verbose: true
